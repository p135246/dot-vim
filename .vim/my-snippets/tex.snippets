# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt


global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C',
'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS',
'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z']]
texIgnoreMathZones = ['texMathText']
texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")
ignore = texIgnoreMathZoneIds[0]
# Check is inside a math environment. This was taken from Gilles Castel's article https://castel.dev/post/lecture-notes-1/ but can be found also in various discussions in the internet.
# This should be understood and modified appropriately!
def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(
            i for i in reversed(synstackids)
            if i in texIgnoreMathZoneIds or i in texMathZoneIds
        )
		return first != ignore
	except StopIteration:
		return False
def test_snippet():
# 
	vim.command('call input("pause")')
endglobal



# \textbf{}
snippet bd "bold" wA
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet tl "italics" wA
\textit{${1:${VISUAL}}}$0
endsnippet

snippet mk "inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet



#context "math()"
snippet fc "frac" i
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet tp "superscript" iA
^{$1}$0
endsnippet

snippet mp "emphasize" wA
\emph{#1}#0
endsnippet

# ==============
#  ENVIRONMENTS
# ==============

snippet bgn "begin-end" bA
\begin{$1}
	${2:${VISUAL}}
\end{$1}
$0
endsnippet

snippet eqn "equation*" bA
\begin{equation*}
${1:${VISUAL}}
\end{equation*}
$0
endsnippet

snippet algn "align*" bA
\begin{align*}
${1:${VISUAL}}
\end{align*}
$0
endsnippet

snippet enmrt "enumerate" bA
\begin{enumerate}
	\item ${1:${VISUAL}}
\end{enumerate}
$0
endsnippet

snippet itmz "itemize" bA
\begin{itemize}
	\item ${1:${VISUAL}}
\end{itemize}
$0
endsnippet

snippet prp "proposition" bA
\begin{Proposition}
	${1:${VISUAL}}
\end{Proposition}
$0
endsnippet

snippet prf "proof" bA
\begin{proof}
	${1:${VISUAL}}
\end{proof}
$0
endsnippet

snippet lma "lemma" bA
\begin{Lemma}
	${1:${VISUAL}}
\end{Lemma}
$0
endsnippet

snippet dfn "definition" bA
\begin{Definition}
	${1:${VISUAL}}
\end{Definition}
$0
endsnippet

snippet rmk "remark" bA
\begin{Remark}
	${1:${VISUAL}}
\end{Remark}
$0
endsnippet

snippet exmp "example" bA
\begin{Example}
	${1:${VISUAL}}
\end{Example}
$0
endsnippet
snippet ct "cite" wA
\cite{$1}$0
endsnippet

snippet ctp "cite" wA
\cite[$2]{$1}$0
endsnippet
